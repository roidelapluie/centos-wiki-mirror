# Disclaimer

This content is released unter the Creative Commons Attribution-ShareAlike 3.0 Unported license http://creativecommons.org/licenses/by-sa/3.0/
It comes from the following url and you can find the list of authors here:
- Original page: https://wiki.centos.org/SpecialInterestGroup/ConfigManagementSIG/Git
- Authors: https://wiki.centos.org/SpecialInterestGroup/ConfigManagementSIG/Git?action=info

---
== Git structure for the Config Management SIG ==


We work under the [https://github.com/centos-sig-configmanagement centos-sig-configmanagement] github organization.


== Proposed CI flow ==

* One repository = one RPM

=== A public member of the github organisation opens a pull request ===

* A Scratch build is made on CBS
* Jenkins runs acceptance tests on that scratch build
* We send feedback to github


=== A github user opens a pull request ===

* We wait until a SIG member adds a comment [test] to the pull request
* A Scratch build is made on CBS
* Jenkins runs acceptance tests on that scratch build
* We send feedback to github


=== A commit is pushed to the repository ===

* A testing build is made on CBS
* Jenkins runs acceptance tests on that scratch build
* We send feedback to github

=== A tag is pushed to the repository ===

* A release build is made on CBS
* Jenkins runs acceptance tests on that tag build
* We send artifact to github releases


=== Tools ===

This is inspired by the foreman way of doing things.

We could reuse their tool https://github.com/theforeman/prprocessor

As the foreman does the sams thing without requiring to sign a CLA, we should not need that neither.
